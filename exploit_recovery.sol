// SPDX-License-Identifier: MIT
pragma solidity 0.8.0;

contract GuessAddress {
    function addressFromLast20Bytes(
        bytes32 bytesValue
    ) private pure returns (address) {
        return address(uint160(uint256(bytesValue)));
    }

    function genAddr(
        address deployer,
        uint256 nonce
    ) public pure returns (address) {
        if (nonce == 0x00)
            return
                addressFromLast20Bytes(
                    keccak256(
                        abi.encodePacked(
                            bytes1(0xd6),
                            bytes1(0x94),
                            deployer,
                            bytes1(0x80)
                        )
                    )
                );
        if (nonce <= 0x7f)
            return
                addressFromLast20Bytes(
                    keccak256(
                        abi.encodePacked(
                            bytes1(0xd6),
                            bytes1(0x94),
                            deployer,
                            uint8(nonce)
                        )
                    )
                );
    }
}
